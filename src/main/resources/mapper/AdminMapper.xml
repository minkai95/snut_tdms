<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snut_tdms.dao.AdminDao">

    <resultMap id="log" type="com.snut_tdms.model.po.Log">
        <id column="id" jdbcType="VARCHAR" javaType="java.lang.String" property="id"/>
        <result column="content" jdbcType="VARCHAR" javaType="java.lang.String" property="content"/>
        <result column="action" jdbcType="VARCHAR" javaType="java.lang.String" property="action"/>
        <result column="time" jdbcType="VARCHAR" javaType="java.sql.Timestamp" property="time"/>
        <result column="operationUserUsername" jdbcType="VARCHAR" javaType="java.lang.String" property="operationUser.username"/>
        <result column="operationUserPassword" jdbcType="VARCHAR" javaType="java.lang.String" property="operationUser.password"/>
        <result column="operationUserIdCard" jdbcType="VARCHAR" javaType="java.lang.String" property="operationUser.idCard"/>
        <result column="operationUserFirstLogin" jdbcType="VARCHAR" javaType="java.lang.Integer" property="operationUser.firstLogin"/>
        <result column="operatedId" jdbcType="VARCHAR" javaType="java.lang.String" property="operatedId"/>
        <result column="operatedType" jdbcType="VARCHAR" javaType="java.lang.String" property="operatedType"/>
        <result column="description" jdbcType="VARCHAR" javaType="java.lang.String" property="description"/>
    </resultMap>
    <resultMap id="admin" type="com.snut_tdms.model.po.UserRole">
        <id column="username" jdbcType="VARCHAR" javaType="java.lang.String" property="user.username"/>
        <result column="password" jdbcType="VARCHAR" javaType="java.lang.String" property="user.password"/>
        <result column="idCard" jdbcType="VARCHAR" javaType="java.lang.String" property="user.idCard"/>
        <result column="firstLogin" jdbcType="VARCHAR" javaType="java.lang.Integer" property="user.firstLogin"/>
        <result column="roleId" jdbcType="VARCHAR" javaType="java.lang.String" property="role.id"/>
        <result column="roleName" jdbcType="VARCHAR" javaType="java.lang.String" property="role.name"/>
    </resultMap>

    <insert id="insertUser" parameterType="java.util.Map">
        INSERT INTO `user`(username) VALUES (#{username});
        INSERT INTO user_info(`user`,department) VALUES (#{username},#{departmentCode});
        INSERT INTO user_role VALUES (#{username},#{roleId})
    </insert>
    <insert id="insertSystemNotice" parameterType="com.snut_tdms.model.po.SystemNotice">
        INSERT INTO system_notice VALUES (
          #{id},
          #{name},
          #{content},
          #{date},
          #{user.username},
          #{role.id}
        )
    </insert>
    <insert id="insertClassType" parameterType="com.snut_tdms.model.po.ClassType">
        INSERT INTO class_type VALUES (
          #{id},
          #{name},
          #{department.code},
          #{user.username}
        )
    </insert>

    <delete id="deleteUserByUsernameList" parameterType="java.util.List">
        DELETE FROM `user` WHERE username in
        <foreach collection="list" item="username" separator="," open="(" close=")">
            #{username}
        </foreach>
    </delete>
    <delete id="deleteClassTypeById" parameterType="java.lang.String">
        DELETE FROM class_type WHERE id = #{0}
    </delete>
    <delete id="deleteDataClassById" parameterType="java.lang.String">
        DELETE FROM data_class WHERE id = #{0}
    </delete>

    <update id="recoverData" parameterType="java.lang.String">
        UPDATE `data` SET
        flag = 0
        WHERE id = #{0}
    </update>
    <update id="updateDataClass" parameterType="java.util.Map">
        UPDATE data_class SET
        flag = ${flag}
        WHERE id = #{dataClassId}
    </update>

    <select id="selectDepartmentLogsByPage" parameterType="java.util.Map" resultMap="log">
        SELECT
          id,
          content,
          `action`,
          `time`,
          user1.username as operationUserUsername,
          user1.password as operationUserPassword,
          user1.id_card as operationUserIdCard,
          user1.first_login as operationUserFirstLogin,
          operated_id as operatedId,
          operated_type as operatedType,
          description
         FROM log
         LEFT JOIN `user` as user1 ON user1.username =operation_user
         WHERE (
             (
                SELECT department
                FROM user_info
                LEFT JOIN `user` ON `user`.username = user_info.`user`
                WHERE user_info.`user` = log.operation_user
             ) = #{departmentCode}
            OR (
                SELECT department
                FROM user_info
                LEFT JOIN `user` ON `user`.username = user_info.`user`
                WHERE user_info.`user`=(
                  SELECT `user`
                  FROM `data`
                  WHERE `data`.id=log.operated_id
                )
            ) = #{departmentCode}
         )
         ORDER BY `time` desc
    </select>
    <select id="selectUserByParamsByPage" parameterType="java.util.Map" resultMap="admin">
        SELECT
        `user`.username,
        `user`.password,
        `user`.id_card as idCard,
        `user`.first_login as firstLogin,
        role.id as roleId,
        role.name as roleName
        FROM user_role
        LEFT JOIN `user` ON `user`.username = user_role.`user`
        LEFT JOIN role ON role.id = user_role.role
        WHERE (
            SELECT department
            FROM user_info
            WHERE user_info.`user` = user_role.`user`
        ) = #{departmentCode}
        <if test="roleId!=null and roleId!=''">
            AND role.id IN ${roleId}
        </if>
    </select>


</mapper>