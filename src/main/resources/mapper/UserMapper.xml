<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snut_tdms.dao.UserDao">

    <resultMap id="userRole" type="com.snut_tdms.model.po.UserRole">
        <id column="username" jdbcType="VARCHAR" javaType="java.lang.String" property="user.username"/>
        <result column="password" jdbcType="VARCHAR" javaType="java.lang.String" property="user.password"/>
        <result column="idCard" jdbcType="VARCHAR" javaType="java.lang.String" property="user.idCard"/>
        <result column="firstLogin" jdbcType="VARCHAR" javaType="java.lang.Integer" property="user.firstLogin"/>
        <result column="roleId" jdbcType="VARCHAR" javaType="java.lang.String" property="role.id"/>
        <result column="roleName" jdbcType="VARCHAR" javaType="java.lang.String" property="role.name"/>
    </resultMap>
    <resultMap id="userInfo" type="com.snut_tdms.model.po.UserInfo">
        <id column="username" jdbcType="VARCHAR" javaType="java.lang.String" property="user.username"/>
        <result column="password" jdbcType="VARCHAR" javaType="java.lang.String" property="user.password"/>
        <result column="idCard" jdbcType="VARCHAR" javaType="java.lang.String" property="user.idCard"/>
        <result column="firstLogin" jdbcType="VARCHAR" javaType="java.lang.Integer" property="user.firstLogin"/>
        <result column="name" jdbcType="VARCHAR" javaType="java.lang.String" property="name"/>
        <result column="sex" jdbcType="VARCHAR" javaType="java.lang.String" property="sex"/>
        <result column="phone" jdbcType="VARCHAR" javaType="java.lang.String" property="phone"/>
        <result column="email" jdbcType="VARCHAR" javaType="java.lang.String" property="email"/>
        <result column="departmentCode" jdbcType="VARCHAR" javaType="java.lang.String" property="department.code"/>
        <result column="departmentName" jdbcType="VARCHAR" javaType="java.lang.String" property="department.name"/>
    </resultMap>
    <resultMap id="systemNotice" type="com.snut_tdms.model.po.SystemNotice">
        <id column="id" jdbcType="VARCHAR" javaType="java.lang.String" property="id"/>
        <result column="name" jdbcType="VARCHAR" javaType="java.lang.String" property="name"/>
        <result column="content" jdbcType="VARCHAR" javaType="java.lang.String" property="content"/>
        <result column="date" jdbcType="VARCHAR" javaType="java.sql.Timestamp" property="date"/>
        <result column="username" jdbcType="VARCHAR" javaType="java.lang.String" property="user.username"/>
        <result column="password" jdbcType="VARCHAR" javaType="java.lang.String" property="user.password"/>
        <result column="idCard" jdbcType="VARCHAR" javaType="java.lang.String" property="user.idCard"/>
        <result column="firstLogin" jdbcType="VARCHAR" javaType="java.lang.Integer" property="user.firstLogin"/>
        <result column="idCard" jdbcType="VARCHAR" javaType="java.lang.String" property="user.idCard"/>
        <result column="roleId" jdbcType="VARCHAR" javaType="java.lang.String" property="role.id"/>
        <result column="roleName" jdbcType="VARCHAR" javaType="java.lang.String" property="role.name"/>
    </resultMap>
    <resultMap id="dataClass" type="com.snut_tdms.model.po.DataClass">
        <id column="id" jdbcType="VARCHAR" javaType="java.lang.String" property="id"/>
        <result column="name" jdbcType="VARCHAR" javaType="java.lang.String" property="name"/>
        <result column="roleId" jdbcType="VARCHAR" javaType="java.lang.String" property="role.id"/>
        <result column="roleName" jdbcType="VARCHAR" javaType="java.lang.String" property="role.name"/>
        <result column="username" jdbcType="VARCHAR" javaType="java.lang.String" property="user.username"/>
        <result column="password" jdbcType="VARCHAR" javaType="java.lang.String" property="user.password"/>
        <result column="idCard" jdbcType="VARCHAR" javaType="java.lang.String" property="user.idCard"/>
        <result column="firstLogin" jdbcType="VARCHAR" javaType="java.lang.Integer" property="user.firstLogin"/>
        <result column="departmentCode" jdbcType="VARCHAR" javaType="java.lang.String" property="department.code"/>
        <result column="departmentName" jdbcType="VARCHAR" javaType="java.lang.String" property="department.name"/>
        <result column="classTypes" jdbcType="VARCHAR" javaType="java.lang.String" property="classTypes"/>
        <result column="flag" jdbcType="VARCHAR" javaType="java.lang.Integer" property="flag"/>
    </resultMap>
    <resultMap id="data" type="com.snut_tdms.model.po.Data">
        <id column="id" jdbcType="VARCHAR" javaType="java.lang.String" property="id"/>
        <result column="content" jdbcType="VARCHAR" javaType="java.lang.String" property="content"/>
        <result column="fileName" jdbcType="VARCHAR" javaType="java.lang.String" property="fileName"/>
        <result column="src" jdbcType="VARCHAR" javaType="java.lang.String" property="src"/>
        <result column="dataClassId" jdbcType="VARCHAR" javaType="java.lang.String" property="dataClass.id"/>
        <result column="dataClassName" jdbcType="VARCHAR" javaType="java.lang.String" property="dataClass.name"/>
        <result column="dataClassRoleId" jdbcType="VARCHAR" javaType="java.lang.String" property="dataClass.role.id"/>
        <result column="dataClassRoleName" jdbcType="VARCHAR" javaType="java.lang.String" property="dataClass.role.name"/>
        <result column="dataClassUserUsername" jdbcType="VARCHAR" javaType="java.lang.String" property="dataClass.user.username"/>
        <result column="dataClassUserPassword" jdbcType="VARCHAR" javaType="java.lang.String" property="dataClass.user.password"/>
        <result column="dataClassUserIdCard" jdbcType="VARCHAR" javaType="java.lang.String" property="dataClass.user.idCard"/>
        <result column="dataClassUserFirstLogin" jdbcType="VARCHAR" javaType="java.lang.Integer" property="dataClass.user.firstLogin"/>
        <result column="dataClassDepartmentCode" jdbcType="VARCHAR" javaType="java.lang.String" property="dataClass.department.code"/>
        <result column="dataClassDepartmentName" jdbcType="VARCHAR" javaType="java.lang.String" property="dataClass.department.name"/>
        <result column="dataClassFlag" jdbcType="VARCHAR" javaType="java.lang.Integer" property="dataClass.flag"/>
        <result column="typeContents" jdbcType="VARCHAR" javaType="java.lang.String" property="typeContents"/>
        <result column="username" jdbcType="VARCHAR" javaType="java.lang.String" property="user.username"/>
        <result column="password" jdbcType="VARCHAR" javaType="java.lang.String" property="user.password"/>
        <result column="idCard" jdbcType="VARCHAR" javaType="java.lang.String" property="user.idCard"/>
        <result column="firstLogin" jdbcType="VARCHAR" javaType="java.lang.Integer" property="user.firstLogin"/>
        <result column="submitTime" jdbcType="VARCHAR" javaType="java.sql.Timestamp" property="submitTime"/>
        <result column="deleteTime" jdbcType="VARCHAR" javaType="java.sql.Timestamp" property="deleteTime"/>
        <result column="flag" jdbcType="VARCHAR" javaType="java.lang.Integer" property="flag"/>
    </resultMap>
    <resultMap id="classTypes" type="com.snut_tdms.model.po.ClassType">
        <id column="id" jdbcType="VARCHAR" javaType="java.lang.String" property="id"/>
        <result column="name" jdbcType="VARCHAR" javaType="java.lang.String" property="name"/>
        <result column="departmentCode" jdbcType="VARCHAR" javaType="java.lang.String" property="department.code"/>
        <result column="departmentName" jdbcType="VARCHAR" javaType="java.lang.String" property="department.name"/>
        <result column="username" jdbcType="VARCHAR" javaType="java.lang.String" property="user.username"/>
        <result column="password" jdbcType="VARCHAR" javaType="java.lang.String" property="user.password"/>
        <result column="idCard" jdbcType="VARCHAR" javaType="java.lang.String" property="user.idCard"/>
        <result column="firstLogin" jdbcType="VARCHAR" javaType="java.lang.Integer" property="user.firstLogin"/>
    </resultMap>

    <insert id="insertLog" parameterType="com.snut_tdms.model.po.Log">
        INSERT INTO log VALUES (
          #{id},
          #{content},
          #{action},
          #{time},
          #{operationUser.username},
          #{operatedUser.username},
          #{description}
        )
    </insert>
    <insert id="insertDataClass" parameterType="com.snut_tdms.model.po.DataClass">
        INSERT INTO data_class VALUES (
          #{id},
          #{name},
          #{role.id},
          #{user.username},
          #{department.code},
          #{flag}
        )
    </insert>
    <insert id="insertData" parameterType="com.snut_tdms.model.po.Data">
        INSERT INTO `data` VALUES (
            #{id},
            #{content},
            #{fileName},
            #{src},
            #{dataClass.id},
            #{typeContents},
            #{user.username},
            #{submitTime},
            #{deleteTime},
            #{flag}
        )
    </insert>

    <update id="updatePassword" parameterType="com.snut_tdms.model.po.User">
        UPDATE `user` SET
          password = #{password},
          id_card = #{idCard}
        WHERE username = #{username}
    </update>
    <update id="updateUserInfo" parameterType="com.snut_tdms.model.po.UserInfo">
        UPDATE user_info SET
          `name` = #{name},
          sex = #{sex},
          phone = #{phone},
          email = #{email}
        WHERE user_info.`user` = #{user.username}
    </update>
    <update id="logicalDeleteDataByIds" parameterType="java.util.Map">
        UPDATE `data` SET
          flag = 1
        WHERE id IN ${ids}
    </update>
    <update id="resetAdminPassword" parameterType="java.lang.String">
        UPDATE `user` SET password = '123456' WHERE username = #{0};
    </update>

    <select id="selectUserByUsername" parameterType="java.lang.String" resultMap="userRole">
        SELECT
          `user`.username,
          `user`.password,
          `user`.id_card as idCard,
          `user`.first_login as firstLogin,
          role.id as roleId,
          role.name as roleName
          FROM user_role
          LEFT JOIN `user` ON `user`.username = user_role.user
          LEFT JOIN role ON role.id = user_role.role
          WHERE `user`.username = #{0}
    </select>
    <select id="selectUserInfoByUsername" parameterType="java.lang.String" resultMap="userInfo">
        SELECT
          `user`.username,
          `user`.password,
          `user`.id_card as idCard,
          `user`.first_login as firstLogin,
          user_info.`name`,
          sex,
          phone,
          email,
          department.code as departmentCode,
          department.`name` as departmentName
          FROM user_info
          LEFT JOIN `user` ON `user`.username = user_info.user
          LEFT JOIN department ON department.code = user_info.department
          WHERE `user`.username = #{0}
    </select>
    <select id="selectSystemNotice" parameterType="java.util.Map" resultMap="systemNotice">
         SELECT
            system_notice.id,
            system_notice.`name`,
            content,
            `date`,
            user1.username as username,
            user1.password,
            user1.id_card as idCard,
            user1.first_login as firstLogin,
            role.id as roleId,
            role.name as roleName
         FROM system_notice
         LEFT JOIN `user` as user1 ON user1.username = system_notice.user
         LEFT JOIN role ON role.id = system_notice.role
         WHERE
            (SELECT department.code FROM user_info
            LEFT JOIN department ON department.code = user_info.department
            LEFT JOIN `user` as user2 ON user_info.user = user2.username
            WHERE user2.username = user1.username) = #{departmentCode}
         <if test="roleId != null and roleId!= ''">
            AND role.id = #{roleId}
         </if>
    </select>
    <select id="selectDataClass" parameterType="java.util.Map" resultMap="dataClass">
        SELECT
          data_class.id,
          data_class.`name`,
          role.id as roleId,
          role.name as roleName,
          `user`.username,
          `user`.password,
          `user`.id_card as idCard,
          `user`.first_login as firstLogin,
          department.code as departmentCode,
          department.name as departmentName,
          class_types as classTypes,
          data_class.flag
          FROM data_class
          LEFT JOIN role ON data_class.role = role.id
          LEFT JOIN `user` ON data_class.`user` = `user`.username
          LEFT JOIN department ON data_class.department = department.code
        WHERE department.code = #{departmentCode}
        <if test="dataClassId != null and dataClassId != ''">
            AND data_class.id = #{dataClassId}
        </if>
        <if test="flag != null and flag!= ''">
            AND data_class.flag in ${flag}
        </if>
        <if test="roleId != null and roleId!= ''">
            AND role.id = #{roleId}
        </if>
    </select>
    <select id="selectDataByParams" parameterType="java.util.Map" resultMap="data">
        SELECT
          `data`.id,
          content,
          file_name,
          src,
          data_class.id as dataClassId,
          data_class.name as dataClassName,
          role.id as dataClassRoleId,
          role.name as dataClassRoleName,
          user1.username as dataClassUserUsername,
          user1.password as dataClassUserPassword,
          user1.id_card as dataClassUserIdCard,
          user1.first_login as dataClassUserFirstLogin,
          department.code as dataClassDepartmentCode,
          department.name as dataClassDepartmentName,
          data_class.flag as dataClassFlag,
          type_contents,
          user2.username,
          user2.password,
          user2.id_card as idCard,
          user2.first_login as firstLogin,
          submit_time as submitTime,
          delete_time as deleteTime,
          `data`.flag
        FROM `data`
        LEFT JOIN data_class ON `data`.data_class = data_class.id
        LEFT JOIN role ON data_class.role = role.id
        LEFT JOIN `user` user1 ON data_class.`user` = user1.username
        LEFT JOIN department ON data_class.department = department.code
        LEFT JOIN `user` user2 ON `data`.user = user2.username
        WHERE user2.username = #{username}
        <if test="dataClassId != null and dataClassId!= ''">
            AND data_class.id = #{dataClassId}
        </if>
    </select>
    <select id="selectClassTypesByDataClassId" parameterType="java.lang.String" resultMap="classTypes">
        SELECT
          ct.id,
          ct.`name`,
          department.code as departmentCode,
          department.name as departmentName,
          `user`.username,
          `user`.password,
          `user`.id_card as idCard,
          `user`.first_login as firstLogin
        FROM  class_type as ct
        LEFT JOIN department ON department.code = ct.department
        LEFT JOIN `user` ON `user`.username = ct.`user`
        INNER JOIN(
            SELECT
                SUBSTRING_INDEX(SUBSTRING_INDEX(b.class_types,'/',b.id),'/','-1') as classTypeId
            FROM (
                SELECT class_types, data_sequence.id FROM data_sequence
                CROSS JOIN(
                    SELECT
                        class_types,
                        (LENGTH(class_types) - LENGTH(REPLACE(class_types,'/',''))+1) as len
                    FROM data_class
                    WHERE id = #{0}
                ) as a ON a.len>=data_sequence.id
            ) as b
        ) as c on c.classTypeId = ct.id
    </select>
    <select id="selectAllDepartment" resultType="com.snut_tdms.model.po.Department">
        SELECT code,`name` FROM department
    </select>
    <select id="selectDepartmentByCode" parameterType="java.lang.String" resultType="com.snut_tdms.model.po.Department">
        SELECT code,`name` FROM department WHERE code = #{0}
    </select>
    <select id="selectAllRole" resultType="com.snut_tdms.model.po.Role">
        SELECT id,`name` FROM role
    </select>
    <select id="selectRoleById" resultType="com.snut_tdms.model.po.Role">
        SELECT id,`name` FROM role WHERE id = #{0}
    </select>
    <select id="selectDepartmentDataClassCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM data_class
        WHERE department = #{departmentCode} AND role = #{roleId} AND `name` NOT in ('私人类型')
    </select>
    <select id="selectAllNoticeCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(1) as num
        FROM system_notice
        WHERE (
          SELECT department
          FROM user_info
          WHERE user_info.`user` = system_notice.`user`
        ) = #{0}
    </select>
</mapper>